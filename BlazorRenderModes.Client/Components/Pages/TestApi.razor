@* TestApi.razor *@
@* @using BlazorRenderModes.Client.Components *@
@using BlazorRenderModes.Client.Models;
@page "/movies/testapi"
@inject HttpClient Http
@* @rendermode - *@

<h1 class="text-center mt-5 display-3">Test Api for Movie Details</h1>
<div class="container-xl">
    @if (RawApiResponse is not null)
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-3 justify-content-center justify-content-xl-start">
            <div class="col">
                <h2>@MovieDetails.Title</h2>
                <p>@MovieDetails.Overview</p>
                <p>Revenue: $@MovieDetails.Revenue</p>
                <p>Runtime: @MovieDetails.Runtime minutes</p>
                <p>Popularity: @MovieDetails.Popularity</p>
                <p>Release Date: @MovieDetails.ReleaseDate</p>

                <h3>Genres</h3>
                <ul>
                    @foreach (var genre in MovieDetails.Genres)
                    {
                        <li>@genre.Name</li>
                    }
                </ul>
            </div>
        </div>
    }
    <button class="btn btn-primary" @onclick="RefreshData">Refresh Data</button>
</div>


@code {
    private MovieDetails MovieDetails { get; set; }
    private HttpResponseMessage RawApiResponse { get; set; }
    private PopularMovieResponse MovieResponse { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await LoadMovieData();
    }

    private async Task LoadMovieData()
    {
        RawApiResponse = await Http.GetAsync("https://api.themoviedb.org/3/movie/550?api_key=b2b90f9e1a4b1b08f3e57cd4db272957");
        if (RawApiResponse.IsSuccessStatusCode)
        {
            var content = await RawApiResponse.Content.ReadAsStringAsync();
            MovieDetails = System.Text.Json.JsonSerializer.Deserialize<MovieDetails>(content);
        }
    }

    private async Task RefreshData()
    {
        await LoadMovieData();
        StateHasChanged();
    }
}

